<?php

/*
   *  实现思路，双重循环完成，外层控制轮数，当前的最小值。内层控制的比较次数
   *  $p=$i 先假设最小的值的位置
   *  $i 当前最小的位置，需要参与与比较的元素, $arr[$p] 是当前已知的最小值
   *  $p=$j 比较发现更小的值，记录下最小值的位置；并且在下次比较采用已知的最小值进行比较
   *  已经确认了当前的最小值的位置，保存到$p中。如果发现最小值的位置与当前假设的位置$i不同，则位置互换
	
 */
function selectSort($arr)
{
	$len = count($arr);
    for ($i = 0; $i < $len - 1; ++$i) {
        $p = $i;
        for ($j = $i + 1; $j < $len; ++$j) {
            if ($arr[$p] < $arr[$j]) { // $arr[$p] > $arr[$j]; 此处控制从小到大('<')排序，或者从大到小('>')排序
                $p = $j;
            }
        }
        if ($p != $i) {
            $tmp = $arr[$p];
            $arr[$p] = $arr[$i];
            $arr[$i] = $tmp;
        }
    }
    return $arr;
}

$testArray = [28, 9, 2, -2, -3, 88, 100, -33, 52, 68, 70, 22, 99];
var_dump(selectSort($testArray));

